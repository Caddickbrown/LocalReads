name: release

on:
  # create a release when you push a version tag like v1.2.3
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create draft GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            See the assets below to download and install.
            
            ## Changes
            - Built with Tauri v2
            - Cross-platform support
          draft: true
          prerelease: false

  build-and-release:
    needs: create-release
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS
          - platform: macos-latest
            target: aarch64-apple-darwin
            args: "--target aarch64-apple-darwin"
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: "--target x86_64-apple-darwin"

          # Linux x64
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            args: "--target x86_64-unknown-linux-gnu"

          # Linux ARM64 (Raspberry Pi 64-bit)
          - platform: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            args: "--target aarch64-unknown-linux-gnu"

          # Windows
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            args: "--target x86_64-pc-windows-msvc"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install Rustå
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      - name: Install Linux dependencies
        if: startsWith(matrix.platform, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            curl \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libssl-dev \
            librsvg2-dev \
            patchelf \
            libc6-dev \
            libx11-dev \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libasound2-dev \
            libpulse-dev \
            libdbus-1-dev \
            libudev-dev \
            libevdev-dev \
            libinput-dev \
            libxkbcommon-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev

      - name: Install JS deps
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@^2.0.0

      - name: Build frontend
        run: npm run build

      - name: Build Tauri application
        run: |
          echo "Building Tauri application for ${{ matrix.target }}"
          tauri build ${{ matrix.args }}

          echo "Checking bundle output..."
          if [ -d "src-tauri/target/${{ matrix.target }}/release/bundle" ]; then
            BUNDLE_DIR="src-tauri/target/${{ matrix.target }}/release/bundle"
          elif [ -d "src-tauri/target/release/bundle" ]; then
            BUNDLE_DIR="src-tauri/target/release/bundle"
          else
            echo "❌ Bundle directory not found"
            exit 1
          fi

          echo "Bundle contents:"
          find "$BUNDLE_DIR" -maxdepth 2 -type f || true
          echo "bundle_dir=$BUNDLE_DIR" >> "$GITHUB_OUTPUT"
        id: build

      - name: Upload artifacts to the Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
            src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage
            src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe
            src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
          fail_on_unmatched_files: false

  publish-release:
    needs: build-and-release
    if: github.event_name == 'push'   # only auto-publish for tag pushes
    runs-on: ubuntu-latest
    steps:
      - name: Publish the Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
          make_latest: true
        
