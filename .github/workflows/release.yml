name: release

on:
  # create a release when you push a version tag like v1.2.3
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS: build separate binaries for Apple Silicon + Intel
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
          # Linux runner for AppImage/.deb (see notes about deps & glibc)
          - platform: ubuntu-22.04
            args: ""
          # Windows .exe / NSIS installer
          - platform: windows-latest
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          # macOS needs both targets if you build a universal later
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Cache Rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          # Tauri v1 used webkit2gtk 4.0; v2 uses 4.1. Keep both if unsure.
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install JS deps
        run: npm ci

      # Build & create (or update) a GitHub Release and upload bundles
      - name: Build with tauri-action and publish release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # __VERSION__ is replaced with your app version (from package.json/tauri.conf)
          tagName: v__VERSION__
          releaseName: "v__VERSION__"
          releaseBody: "See the assets below to download and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
