name: release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - id: meta
        run: echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Create draft GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.tag }}
          body: |
            See the assets below to download and install.

            ## Changes
            - Built with Tauri v2
            - Cross-platform support
          draft: true
          prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
            args: "--target aarch64-apple-darwin"
            files_glob: "src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg"
          - platform: macos-latest
            target: x86_64-apple-darwin
            args: "--target x86_64-apple-darwin"
            files_glob: "src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg"
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            args: ""
            files_glob: "src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/*.AppImage"
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            args: ""
            files_glob: "src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe"

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install Rust toolchain (with target)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust build artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-on-failure: true

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            patchelf \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libssl-dev \
            libc6-dev \
            libx11-dev \
            libxcb1-dev \
            libxrandr-dev \
            libxss-dev \
            libasound2-dev \
            libpulse-dev \
            libdbus-1-dev \
            libudev-dev \
            libevdev-dev \
            libinput-dev \
            libxkbcommon-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev

      - name: Install JS deps
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@^2.0.0

      - name: Build frontend
        run: npm run build

      - name: Build Tauri application
        shell: bash   # important for Windows
        run: |
          echo "Starting Tauri build for ${{ matrix.target }}..."
          tauri build ${{ matrix.args }}
          echo "Listing bundle output:"
          if [ -d "src-tauri/target/${{ matrix.target }}/release/bundle" ]; then
            find "src-tauri/target/${{ matrix.target }}/release/bundle" -maxdepth 2 -type f
          else
            echo "Bundle directory not found"; exit 1
          fi

      - name: Upload artifacts to the Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.create-release.outputs.tag }}
          files: ${{ matrix.files_glob }}
          # Optional: make the step fail if the glob matches nothing
          fail_on_unmatched_files: true
